20/01/2025
leetcode : https://leetcode.com/problems/first-completely-painted-row-or-column/description/
row wise or column wise fillup dekhna h
       java solution-->
class Solution {
    class Pair{
        int x;
        int y;
        public Pair(int x, int y){
         ;
            this.x=x;
            this.y=y;
        }
    }
    public int firstCompleteIndex(int[] arr, int[][] mat) {
     int   m = mat.length;
  int n = mat[0].length;
 // int idx=-1;
  //int a[][]= new int[m][n];
  HashMap<Integer,Pair> map= new HashMap<>();
  for(int i=0;i<m;i++){
    for(int j=0;j<n;j++){
        map.put(mat[i][j],new Pair(i,j));
    }
  }
  int[] rowSum = new int[m];
        int[] colSum = new int[n];
        for(int i=0;i<arr.length;i++){
             if(map.containsKey(arr[i])){
                Pair rv= map.remove(arr[i]);

                int x=rv.x;
                int y=rv.y;
               // a[x][y]=1;
                rowSum[x]++;
            colSum[y]++;
             
           // if(rsum(a)||csum(a)) {idx=i;break;}
            if (rowSum[x] == n || colSum[y] == m) {
                return i; // Return the current index
            }
        }
        }
        //return idx;
        return -1;
    }
   /* public boolean rsum(int [][]a){   
        for(int i=0;i<a.length;i++){
            int r=0;
            for(int j=0;j<a[0].length;j++){
                r+=a[i][j];
            } if(r==a[0].length){
                    return true; 
                }
        } return false;
    }
    public boolean csum(int [][]a){  
        for(int j=0;j<a[0].length;j++){
            int c=0;
            for(int i=0;i<a.length;i++){
                c+=a[i][j];
            } if(c==a.length){
                    return true; 
                }
        }
    return false;} */
}
