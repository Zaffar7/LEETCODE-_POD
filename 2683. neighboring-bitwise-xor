17/01/2025
Leetcode : https://leetcode.com/problems/neighboring-bitwise-xor/description/
****java****
class Solution {
    public boolean doesValidArrayExist(int[] derived) {
        int n= derived.length;
    /*    int []arr= new int[n];
        arr[0] = 0; // Assume arr[0] = 0 initially
        // Calculate the rest of the array based on derived values  X^Y=Z FIND 3RD NO
        for (int i = 0; i < n - 1; i++) {
            arr[i + 1] = arr[i] ^ derived[i];
        }
        // Check if the cycle condition is satisfied
        int last = arr[n - 1] ^ arr[0];
        return last == derived[n - 1];*/
        int sum=0;
        for(int i:derived)sum=sum^i;
        return sum==0? true:false;
    }
}
